C51 COMPILER V9.01   MAIN                                                                  08/18/2016 19:59:31 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg51.h>
   2          #include "delay.h"
   3          #include "LCD1602.h"
   4          #include "I2C.h"
   5          #include "EEPROM.h"
   6          #include "NRF2401.h"
   7          #define GPIO_KEY P1
   8          #define DIG_GPIO_DUAN P0
   9          #define DIG_GPIO_WEI P2
  10          
  11          
  12          sbit NRF_IR  = P2^2;
  13          //char Keydown(void);
  14          //void Interrupt_Init(void);
  15          //void TIM_Init(void);
  16          //void Usart_Init(void);
  17          //void Display_digital(void);
  18          //void Usart_pro(void);
  19          
  20          //char flag=0;
  21          unsigned char rece_buf[32];
  22          unsigned char code DIG_PLACE[8]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};//位选控制   查表的方法
             -控制
  23          unsigned char code DIG_CODE[17]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x7
             -9,0x71};  //0~F的显示码
  24          //char uart_buff[32],uart_i=0;
  25          //char test[32]=0;
  26          //char flag_key;
  27          //int timer=0;
  28          //char keyvalue;
  29          
  30          int main(void)
  31          {
  32   1      //  int i=0,a;
  33   1      //  char num;
  34   1        // Usart_Init();
  35   1        // TIM_Init();
  36   1        // Interrupt_Init();
  37   1        LCD1602_Init();// LCD初始化
  38   1        // LCD1602_Writedata('G');
  39   1        // while(NRF24L01_Check()); // 等待检测到NRF24L01，程序才会向下执行
  40   1        NRF24L01_RT_Init();
  41   1        LCD1602_Writedata('A');
  42   1        while(1)
  43   1        {
  44   2        //  if(NRF_IR==0)   // 如果无线模块接收到数据
  45   2          {
  46   3            if(NRF24L01_RxPacket(rece_buf)==0)
  47   3            {
  48   4              // LCD1602_Writedata('A');
  49   4              Sendlength(rece_buf);
  50   4            }
  51   3          }
  52   2         // Keydown();
  53   2      //    if(keyvalue!=15)
C51 COMPILER V9.01   MAIN                                                                  08/18/2016 19:59:31 PAGE 2   

  54   2      //    {
  55   2      //      AT24C02_write(2,keyvalue);
  56   2      //    }
  57   2      
  58   2      //    num=AT24C02_read(2);
  59   2      //    LCD1602_Writedata(num+'0');
  60   2          // if(flag_key)
  61   2          // {
  62   2          //   flag_key=0;
  63   2          //   test[0]=DIG_CODE[keyvalue];
  64   2          //   // Delay_5ms();
  65   2          //   for(i=20;i>=0;i--)
  66   2          //   {
  67   2          //     test[i]=test[i-1];
  68   2          //   }
  69   2          // }
  70   2          // Display_digital();
  71   2        //  led=flag;
  72   2        }
  73   1      }
  74          //void Display_digital()
  75          //{
  76          //  int i,j;
  77          //  for(i=0;i<8;i++)
  78          //  {
  79          //    DIG_GPIO_DUAN=test[i];
  80          //    DIG_GPIO_WEI=DIG_PLACE[i];
  81          //    j=300;
  82          //    while(j--);
  83          //    DIG_GPIO_DUAN=0X00;
  84          //  }
  85          //}
  86          
  87          //char Keydown(void)//按键
  88          //{
  89          //  GPIO_KEY=0X0F;
  90          //  if(GPIO_KEY!=0X0F)
  91          //  {
  92          //    Delay_5ms();
  93          //    if(GPIO_KEY!=0X0F)
  94          //    {
  95          //      flag_key=1;
  96          //      GPIO_KEY=0X0F;
  97          //      switch (GPIO_KEY)
  98          //       {
  99          //        case 0X07: keyvalue=0;  break;
 100          //        case 0x0B: keyvalue=1;  break;
 101          //        case 0x0D: keyvalue=2;  break;
 102          //        case 0x0E: keyvalue=3;  break;
 103          //      }
 104          //      GPIO_KEY=0XF0;
 105          //      switch (GPIO_KEY)
 106          //      {
 107          //        case 0X70: keyvalue+=0;  break;
 108          //        case 0xB0: keyvalue+=4;  break;
 109          //        case 0xD0: keyvalue+=8;  break;
 110          //        case 0xE0: keyvalue+=12; break;
 111          //      }
 112          //      while(GPIO_KEY!=0XF0);
 113          //    }
 114          //  }
 115          //  return keyvalue;
C51 COMPILER V9.01   MAIN                                                                  08/18/2016 19:59:31 PAGE 3   

 116          //}
 117          //void Interrupt_Init(void) //外部中断初始化
 118          //{
 119          //  EA=1;
 120          //  EX0=1;
 121          //  IT0=1;//下降沿触发
 122          
 123          //  EX1=1;
 124          //  IT1=1;
 125          //}
 126          //void TIM_Init(void)//定时器初始化
 127          //{
 128          //  EA=1;
 129          //  TMOD=0x01;//工作方式1
 130          //  TH0=(65536-1000)/256;
 131          //  TL0=(65536-1000)%256;
 132          //  ET0=1;//打开定时器中断
 133          //  TR0=1;//打开定时器0
 134          //}
 135          //void It0(void) interrupt 0
 136          //{
 137          //  EX0=0;
 138          //  LCD1602_Writecom(0X01);
 139          //  flag=~flag;
 140          //  EX0=1;
 141          //}
 142          //void It1(void) interrupt 2
 143          //{
 144          //  EX1=0;
 145          //  flag=1;
 146          //  EX1=1;
 147          //}
 148          //void TIMER0 (void) interrupt 1
 149          //{
 150          //  TH0=(65536-1000)/256;
 151          //  TL0=(65536-1000)%256;
 152          //  timer++;
 153          //  if(timer==1000)
 154          //  {
 155          //    P2=~P2;
 156          //    timer=0;
 157          //  }
 158          //}
 159          //void Usart_Init(void)
 160          //{
 161          //  EA=1;
 162          //  ES=1;
 163          //  TR1=1;
 164          //  TMOD=0X20;
 165          //  SCON=0X50;
 166          //  TH1=0XFD;
 167          //  TL1=0XFD;
 168          //}
 169          //void Usart_interrput(void) interrupt 4
 170          //{
 171          //  char buff;
 172          //  if(RI)
 173          //  {
 174          //    RI=0;
 175          //    // buff=SBUF;
 176          //    // SBUF=buff;
 177          //    uart_buff[uart_i]=SBUF;
C51 COMPILER V9.01   MAIN                                                                  08/18/2016 19:59:31 PAGE 4   

 178          //    uart_i++;
 179          //  }
 180          //  else
 181          //    TI=0;
 182          //}
 183          // void Usart_pro()
 184          // {
 185          //   SBUF=uart_buff[];
 186          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     33    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
